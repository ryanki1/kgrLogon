{"version":3,"sources":["webpack:///./src/app/address/address.component.css","webpack:///./src/app/address/address.component.html","webpack:///./src/app/address/address.component.ts","webpack:///./src/app/postal/postal.component.html","webpack:///./src/app/postal/postal.component.scss","webpack:///./src/app/postal/postal.component.ts","webpack:///./src/app/postal/state/postal.model.ts","webpack:///./src/app/start/start-routing.module.ts","webpack:///./src/app/start/start.module.ts"],"names":[],"mappings":"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","file":"start-start-module.js","sourcesContent":["module.exports = \".full-width {\\n  width: 100%;\\n}\\n\\n.shipping-card {\\n  min-width: 120px;\\n  margin: 20px auto;\\n}\\n\\n.mat-radio-button {\\n  display: block;\\n  margin: 5px 0;\\n}\\n\\n.row {\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n.col {\\n  flex: 1;\\n  margin-right: 20px;\\n}\\n\\n.col:last-child {\\n  margin-right: 0;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRkcmVzcy9hZGRyZXNzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsY0FBYztFQUNkLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxPQUFPO0VBQ1Asa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL2FkZHJlc3MvYWRkcmVzcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZ1bGwtd2lkdGgge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLnNoaXBwaW5nLWNhcmQge1xuICBtaW4td2lkdGg6IDEyMHB4O1xuICBtYXJnaW46IDIwcHggYXV0bztcbn1cblxuLm1hdC1yYWRpby1idXR0b24ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiA1cHggMDtcbn1cblxuLnJvdyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG59XG5cbi5jb2wge1xuICBmbGV4OiAxO1xuICBtYXJnaW4tcmlnaHQ6IDIwcHg7XG59XG5cbi5jb2w6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1yaWdodDogMDtcbn1cbiJdfQ== */\"","module.exports = \"<form [formGroup]=\\\"addressForm\\\" novalidate (ngSubmit)=\\\"onSubmit()\\\">\\n  <mat-card class=\\\"shipping-card\\\">\\n    <mat-card-header>\\n      <mat-card-title>Shipping Information</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n          <mat-form-field class=\\\"full-width\\\">\\n            <input matInput placeholder=\\\"Company\\\" formControlName=\\\"company\\\">\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n          <mat-form-field class=\\\"full-width\\\">\\n            <input matInput placeholder=\\\"First name\\\" formControlName=\\\"firstName\\\">\\n            <mat-error *ngIf=\\\"addressForm.controls['firstName'].hasError('required')\\\">\\n              First name is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n        <div class=\\\"col\\\">\\n          <mat-form-field class=\\\"full-width\\\">\\n            <input matInput placeholder=\\\"Last name\\\" formControlName=\\\"lastName\\\">\\n            <mat-error *ngIf=\\\"addressForm.controls['lastName'].hasError('required')\\\">\\n              Last name is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n          <mat-form-field class=\\\"full-width\\\">\\n            <textarea matInput placeholder=\\\"Address\\\" formControlName=\\\"address\\\"></textarea>\\n            <mat-error *ngIf=\\\"addressForm.controls['address'].hasError('required')\\\">\\n              Address is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"!hasUnitNumber\\\">\\n        <div class=\\\"col\\\">\\n          <button mat-button type=\\\"button\\\" (click)=\\\"hasUnitNumber = !hasUnitNumber\\\">\\n            + Add C/O, Apt, Suite, Unit\\n          </button>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\" *ngIf=\\\"hasUnitNumber\\\">\\n        <div class=\\\"col\\\">\\n          <mat-form-field class=\\\"full-width\\\">\\n            <textarea matInput placeholder=\\\"Address 2\\\" formControlName=\\\"address2\\\"></textarea>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n          <mat-form-field class=\\\"full-width\\\">\\n            <input matInput placeholder=\\\"City\\\" formControlName=\\\"city\\\">\\n            <mat-error *ngIf=\\\"addressForm.controls['city'].hasError('required')\\\">\\n              City is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n        <div class=\\\"col\\\">\\n          <mat-form-field class=\\\"full-width\\\">\\n            <mat-select placeholder=\\\"State\\\" formControlName=\\\"state\\\">\\n              <mat-option *ngFor=\\\"let state of states\\\" [value]=\\\"state.abbreviation\\\">\\n                {{ state.name }}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error *ngIf=\\\"addressForm.controls['state'].hasError('required')\\\">\\n              State is <strong>required</strong>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n          <mat-form-field class=\\\"full-width\\\">\\n            <input matInput #postalCode maxlength=\\\"5\\\" placeholder=\\\"Postal Code\\\" type=\\\"number\\\" formControlName=\\\"postalCode\\\">\\n            <mat-hint align=\\\"end\\\">{{postalCode.value.length}} / 5</mat-hint>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col\\\">\\n          <mat-radio-group formControlName=\\\"shipping\\\">\\n            <mat-radio-button value=\\\"free\\\">Free Shipping</mat-radio-button>\\n            <mat-radio-button value=\\\"priority\\\">Priority Shipping</mat-radio-button>\\n            <mat-radio-button value=\\\"nextday\\\">Next Day Shipping</mat-radio-button>\\n          </mat-radio-group>\\n        </div>\\n      </div>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n    </mat-card-actions>\\n  </mat-card>\\n</form>\\n\"","import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.css']\n})\nexport class AddressComponent {\n  addressForm = this.fb.group({\n    company: null,\n    firstName: [null, Validators.required],\n    lastName: [null, Validators.required],\n    address: [null, Validators.required],\n    address2: null,\n    city: [null, Validators.required],\n    state: [null, Validators.required],\n    postalCode: [null, Validators.compose([\n      Validators.required, Validators.minLength(5), Validators.maxLength(5)])\n    ],\n    shipping: ['free', Validators.required]\n  });\n\n  hasUnitNumber = false;\n\n  states = [\n    {name: 'Alabama', abbreviation: 'AL'},\n    {name: 'Alaska', abbreviation: 'AK'},\n    {name: 'American Samoa', abbreviation: 'AS'},\n    {name: 'Arizona', abbreviation: 'AZ'},\n    {name: 'Arkansas', abbreviation: 'AR'},\n    {name: 'California', abbreviation: 'CA'},\n    {name: 'Colorado', abbreviation: 'CO'},\n    {name: 'Connecticut', abbreviation: 'CT'},\n    {name: 'Delaware', abbreviation: 'DE'},\n    {name: 'District Of Columbia', abbreviation: 'DC'},\n    {name: 'Federated States Of Micronesia', abbreviation: 'FM'},\n    {name: 'Florida', abbreviation: 'FL'},\n    {name: 'Georgia', abbreviation: 'GA'},\n    {name: 'Guam', abbreviation: 'GU'},\n    {name: 'Hawaii', abbreviation: 'HI'},\n    {name: 'Idaho', abbreviation: 'ID'},\n    {name: 'Illinois', abbreviation: 'IL'},\n    {name: 'Indiana', abbreviation: 'IN'},\n    {name: 'Iowa', abbreviation: 'IA'},\n    {name: 'Kansas', abbreviation: 'KS'},\n    {name: 'Kentucky', abbreviation: 'KY'},\n    {name: 'Louisiana', abbreviation: 'LA'},\n    {name: 'Maine', abbreviation: 'ME'},\n    {name: 'Marshall Islands', abbreviation: 'MH'},\n    {name: 'Maryland', abbreviation: 'MD'},\n    {name: 'Massachusetts', abbreviation: 'MA'},\n    {name: 'Michigan', abbreviation: 'MI'},\n    {name: 'Minnesota', abbreviation: 'MN'},\n    {name: 'Mississippi', abbreviation: 'MS'},\n    {name: 'Missouri', abbreviation: 'MO'},\n    {name: 'Montana', abbreviation: 'MT'},\n    {name: 'Nebraska', abbreviation: 'NE'},\n    {name: 'Nevada', abbreviation: 'NV'},\n    {name: 'New Hampshire', abbreviation: 'NH'},\n    {name: 'New Jersey', abbreviation: 'NJ'},\n    {name: 'New Mexico', abbreviation: 'NM'},\n    {name: 'New York', abbreviation: 'NY'},\n    {name: 'North Carolina', abbreviation: 'NC'},\n    {name: 'North Dakota', abbreviation: 'ND'},\n    {name: 'Northern Mariana Islands', abbreviation: 'MP'},\n    {name: 'Ohio', abbreviation: 'OH'},\n    {name: 'Oklahoma', abbreviation: 'OK'},\n    {name: 'Oregon', abbreviation: 'OR'},\n    {name: 'Palau', abbreviation: 'PW'},\n    {name: 'Pennsylvania', abbreviation: 'PA'},\n    {name: 'Puerto Rico', abbreviation: 'PR'},\n    {name: 'Rhode Island', abbreviation: 'RI'},\n    {name: 'South Carolina', abbreviation: 'SC'},\n    {name: 'South Dakota', abbreviation: 'SD'},\n    {name: 'Tennessee', abbreviation: 'TN'},\n    {name: 'Texas', abbreviation: 'TX'},\n    {name: 'Utah', abbreviation: 'UT'},\n    {name: 'Vermont', abbreviation: 'VT'},\n    {name: 'Virgin Islands', abbreviation: 'VI'},\n    {name: 'Virginia', abbreviation: 'VA'},\n    {name: 'Washington', abbreviation: 'WA'},\n    {name: 'West Virginia', abbreviation: 'WV'},\n    {name: 'Wisconsin', abbreviation: 'WI'},\n    {name: 'Wyoming', abbreviation: 'WY'}\n  ];\n\n  constructor(private fb: FormBuilder) {}\n\n  onSubmit() {\n    alert('Thanks!');\n  }\n}\n","module.exports = \"<form novalidate\\n      [formGroup]=\\\"postalForm\\\"\\n      ngClass.xs=\\\"smartphone-portrait\\\"\\n      (ngSubmit)=\\\"submitPostal($event)\\\">\\n  <fieldset>\\n    <mat-form-field appearance=\\\"legacy\\\">\\n      <input\\n        class=\\\"line1\\\"\\n        matInput\\n        type=\\\"text\\\"\\n        formControlName=\\\"line1\\\"\\n        placeholder=\\\"Line 1\\\">\\n      <mat-hint>* This is the first line of your address</mat-hint>\\n      <mat-error *ngIf=\\\"postalForm.get('line1').hasError('required')\\\">Line 1 is required</mat-error>\\n    </mat-form-field>\\n    <mat-form-field appearance=\\\"legacy\\\">\\n      <input\\n        class=\\\"line2\\\"\\n        matInput\\n        type=\\\"text\\\"\\n        formControlName=\\\"line2\\\"\\n        placeholder=\\\"Line 2\\\">\\n        <mat-hint>* This is the second line of your address</mat-hint>\\n        <mat-error *ngIf=\\\"postalForm.get('line2').hasError('required')\\\">Line 2 is required</mat-error>\\n    </mat-form-field>\\n    <mat-form-field appearance=\\\"legacy\\\">\\n      <input\\n        class=\\\"line3\\\"\\n        matInput\\n        type=\\\"text\\\"\\n        formControlName=\\\"line3\\\"\\n        placeholder=\\\"Line 3\\\">\\n    </mat-form-field>\\n    <mat-form-field appearance=\\\"legacy\\\">\\n      <input\\n        class=\\\"city\\\"\\n        matInput\\n        type=\\\"text\\\"\\n        formControlName=\\\"city\\\"\\n        placeholder=\\\"City\\\">\\n      <mat-hint>*</mat-hint>\\n      <mat-error *ngIf=\\\"postalForm.get('city').hasError('required')\\\">City is required</mat-error>\\n    </mat-form-field>\\n    <mat-form-field appearance=\\\"legacy\\\">\\n      <input\\n        class=\\\"postcode\\\"\\n        matInput\\n        type=\\\"text\\\"\\n        formControlName=\\\"postcode\\\"\\n        placeholder=\\\"Postcode\\\">\\n      <mat-hint>*</mat-hint>\\n      <mat-error *ngIf=\\\"postalForm.get('postcode').hasError('required')\\\">Postcode is required</mat-error>\\n      <mat-error *ngIf=\\\"this.postalForm.get('postcode').hasError('pattern')\\\">Postcode has format 12345</mat-error>\\n    </mat-form-field>\\n  </fieldset>\\n  <button\\n    class=\\\"submit\\\"\\n    mat-button\\n    mat-raised-button\\n    color=\\\"warn\\\"\\n    [disabled]=\\\"postalForm.invalid\\\">\\n    Submit\\n  </button>\\n</form>\\n\"","module.exports = \"form {\\n  flex-direction: column;\\n  justify-content: space-between;\\n  height: 100%;\\n  overflow: auto;\\n  background-size: cover;\\n  background-color: tan; }\\n  form.smartphone-portrait {\\n    display: flex; }\\n  form fieldset {\\n    display: flex; }\\n  form .submit::ng-deep {\\n    display: flex;\\n    width: 100%; }\\n  form .submit::ng-deep span {\\n      width: 100%;\\n      text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yeWFua2kxMC9XZWJzdG9ybVByb2plY3RzL3JlYWN0aXZlQXBwL3NyYy9hcHAvcG9zdGFsL3Bvc3RhbC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUtFLHNCQUFzQjtFQUN0Qiw4QkFBOEI7RUFDOUIsWUFBWTtFQUNaLGNBQWM7RUFDZCxzQkFBc0I7RUFDdEIscUJBQXFCLEVBQUE7RUFWdkI7SUFHSSxhQUFhLEVBQUE7RUFIakI7SUFhSSxhQUFhLEVBQUE7RUFiakI7SUFpQkksYUFBYTtJQUNiLFdBQVcsRUFBQTtFQWxCZjtNQXFCTSxXQUFXO01BQ1gsa0JBQWtCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wb3N0YWwvcG9zdGFsLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybSB7XG5cbiAgJi5zbWFydHBob25lLXBvcnRyYWl0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgaGVpZ2h0OiAxMDAlO1xuICBvdmVyZmxvdzogYXV0bztcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogdGFuO1xuXG4gIGZpZWxkc2V0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG5cbiAgLnN1Ym1pdDo6bmctZGVlcCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICB3aWR0aDogMTAwJTtcblxuICAgIHNwYW4ge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgfVxuICB9XG59XG5cblxuIl19 */\"","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {PostalQuery} from './state/postal.query';\nimport {Postal, createPostal} from './state/postal.model';\nimport {PostalService} from './state/postal.service';\nimport {PersistNgFormPlugin} from '@datorama/akita';\nimport {PostalStore} from './state/postal.store';\n\n@Component({\n  selector: 'app-postal',\n  templateUrl: './postal.component.html',\n  styleUrls: ['./postal.component.scss'],\n  encapsulation: ViewEncapsulation.Emulated\n})\nexport class PostalComponent implements OnInit {\n\n  public postalForm: FormGroup = this.fb.group({\n    id: [0],\n    line1: ['', Validators.required],\n    line2: ['', Validators.required],\n    line3: [''],\n    city: ['', Validators.required],\n    postcode: ['', [Validators.required, Validators.pattern('[0-9]{5}')]],\n  });\n  private persistForm: PersistNgFormPlugin<Postal>;\n\n  constructor(private fb: FormBuilder,\n              private postalQuery: PostalQuery,\n              private postalStore: PostalStore,\n              private postalService: PostalService) {\n  }\n\n  ngOnInit(): void {\n    this.persistForm = new PersistNgFormPlugin(this.postalQuery, createPostal).setForm(this.postalForm);\n    this.checkFormControlsForErrors();\n  }\n\n  checkFormControlsForErrors() {\n    Object.keys(this.postalForm.controls).forEach((key: string) => {\n      if (key === 'id') {\n        return;\n      }\n      this.postalForm.controls[key].markAsTouched();\n    });\n  }\n\n  submitPostal(e: any) {\n    const postal: Postal = this.postalForm.value;\n    this.postalService.upsert(this.postalForm.get('id').value, postal);\n  }\n\n}\n","import { ID } from '@datorama/akita';\n\nexport interface Postal {\n  id: ID;\n  line1: string;\n  line2: string;\n  line3: string;\n  city: string;\n  postcode: string;\n}\n\n/**\n * A factory function that creates Postal\n */\nexport function createPostal() {\n  return {\n    line1: '',\n    line2: '',\n    line3: '',\n    city: '',\n    postcode: ''\n  } as Postal;\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {PostalComponent} from '../postal/postal.component';\nimport {AddressComponent} from '../address/address.component';\n\nconst routes: Routes = [\n    {\n        path: 'postal',\n        component: PostalComponent,\n    },\n    {\n        path: 'address',\n        component: AddressComponent,\n        pathMatch: 'full'\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class StartRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {StartRoutingModule} from './start-routing.module';\nimport {AddressComponent} from '../address/address.component';\nimport {PostalComponent} from '../postal/postal.component';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule, MatCardModule, MatInputModule, MatRadioModule, MatSelectModule} from '@angular/material';\n\n@NgModule({\n    declarations: [\n        AddressComponent,\n        PostalComponent,\n    ],\n    imports: [\n        CommonModule,\n        StartRoutingModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatRadioModule,\n        MatCardModule,\n    ],\n})\nexport class StartModule {\n}\n"],"sourceRoot":""}